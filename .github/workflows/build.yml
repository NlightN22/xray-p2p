name: build

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            archive: tar.gz
            ext: ""
          - goos: linux
            goarch: arm64
            archive: tar.gz
            ext: ""
          - goos: windows
            goarch: amd64
            archive: zip
            ext: ".exe"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          EXT: ${{ matrix.ext }}
        run: |
          set -euo pipefail
          out="dist/${GOOS}-${GOARCH}/xp2p${EXT}"
          mkdir -p "$(dirname "$out")"
          go build -trimpath -ldflags="-s -w" -o "$out" ./go/cmd/xp2p

      - name: Package
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          ARCHIVE: ${{ matrix.archive }}
          EXT: ${{ matrix.ext }}
        run: |
          set -euo pipefail
          cd "dist/${GOOS}-${GOARCH}"
          artifact="../xp2p-${GOOS}-${GOARCH}.${ARCHIVE}"
          if [ "$ARCHIVE" = "zip" ]; then
            zip -j "$artifact" "xp2p${EXT}"
          else
            tar -czf "$artifact" "xp2p${EXT}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: xp2p-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/xp2p-${{ matrix.goos }}-${{ matrix.goarch }}.${{ matrix.archive }}
          retention-days: 7

  smoke:
    runs-on: ubuntu-latest
    needs: build-matrix
    steps:
      - name: Download linux-amd64 artifact
        uses: actions/download-artifact@v4
        with:
          name: xp2p-linux-amd64
          path: smoke

      - name: Extract
        run: |
          set -euo pipefail
          tar -xzf smoke/xp2p-linux-amd64.tar.gz -C smoke

      - name: Smoke test
        run: |
          set -euo pipefail
          BIN="smoke/xp2p"
          chmod +x "$BIN"
          "$BIN" --help >/dev/null

          "$BIN" &
          XP2P_PID=$!
          trap 'kill $XP2P_PID' EXIT

          ready=0
          for attempt in {1..10}; do
            if "$BIN" ping 127.0.0.1 --count 1 --timeout 1 >/dev/null 2>&1; then
              ready=1
              break
            fi
            sleep 1
          done
          if [ "$ready" -ne 1 ]; then
            echo "xp2p service failed to start"
            exit 1
          fi

          "$BIN" ping 127.0.0.1 --count 2 --timeout 1
